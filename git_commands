These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects


git clone <repo-url>

Copies an existing repository (like from GitHub) onto your local computer.
git clone https://github.com/user/project.git
git init
git add index.html
git add .   # adds all files
git mv old_name.txt new_name.txt
git mv old_name.txt new_name.txt
git restore app.js
git rm old_file.txt
git sparse-checkout init --cone
git sparse-checkout set src/
git bisect start
git bisect bad
git bisect good <commit-id>
git diff
git diff HEAD~1 HEAD
git grep "function"
git log --oneline
git log --oneline
git show 22410bd
git status
git branch        # list branches
git branch new-feature
git commit -m "Add login feature"
git fetch origin
git pull origin main
git push origin master
git switch main
git reset --hard HEAD~1   # undo last commit completely
git rebase main
git merge dev
git branch        # list branches
git branch new-feature
